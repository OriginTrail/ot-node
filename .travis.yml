os: linux
dist: xenial
language: node_js
node_js:
  - "9"
env:
  - NODE_ENV=development ARTIFACTS_DIR=$TRAVIS_BUILD_DIR/artifacts CUCUMBER_ARTIFACTS_DIR=$ARTIFACTS_DIR/cucumber BDD_SECTION=first
  - NODE_ENV=development ARTIFACTS_DIR=$TRAVIS_BUILD_DIR/artifacts CUCUMBER_ARTIFACTS_DIR=$ARTIFACTS_DIR/cucumber BDD_SECTION=second
  - NODE_ENV=development ARTIFACTS_DIR=$TRAVIS_BUILD_DIR/artifacts CUCUMBER_ARTIFACTS_DIR=$ARTIFACTS_DIR/cucumber BDD_SECTION=third
  - NODE_ENV=development ARTIFACTS_DIR=$TRAVIS_BUILD_DIR/artifacts CUCUMBER_ARTIFACTS_DIR=$ARTIFACTS_DIR/cucumber BDD_SECTION=fourth
  - NODE_ENV=development ARTIFACTS_DIR=$TRAVIS_BUILD_DIR/artifacts CUCUMBER_ARTIFACTS_DIR=$ARTIFACTS_DIR/cucumber BDD_SECTION=fifth
  - NODE_ENV=development ARTIFACTS_DIR=$TRAVIS_BUILD_DIR/artifacts CUCUMBER_ARTIFACTS_DIR=$ARTIFACTS_DIR/cucumber BDD_SECTION=sixth
  - NODE_ENV=development ARTIFACTS_DIR=$TRAVIS_BUILD_DIR/artifacts CUCUMBER_ARTIFACTS_DIR=$ARTIFACTS_DIR/cucumber BDD_SECTION=docker

cache:
  npm: false
services:
  - docker
addons:
  apt:
    packages:
    - s3cmd
deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  bucket: $ARTIFACTS_BUCKET
before_script:
  - mkdir -p $ARTIFACTS_DIR
  - mkdir -p $CUCUMBER_ARTIFACTS_DIR
  - sudo ./setup_arangodb.sh
  - cp .origintrail_noderc.travis .origintrail_noderc
  - npm run bootstrap
script:
  - npm run lint
  - if [ "$BDD_SECTION" == "first" || "$BDD_SECTION" == "second" || "$BDD_SECTION" == "third" || "$BDD_SECTION" == "fourth" || "$BDD_SECTION" == "fifth"]; then
      npm run test:bdd:dryrun;
    fi
  - if [ "$BDD_SECTION" == "first" ]; then
    travis_wait 50 npm run test:bdd -- --tags=@first --world-parameters '{"appDataBaseDir":"$CUCUMBER_ARTIFACTS_DIR","keepFailedArtifacts":true}';
    fi
  - if [ "$BDD_SECTION" == "second" ]; then
    travis_wait 50 npm run test:bdd -- --tags=@second --world-parameters '{"appDataBaseDir":"$CUCUMBER_ARTIFACTS_DIR","keepFailedArtifacts":true}';
    fi
  - if [ "$BDD_SECTION" == "third" ]; then
    travis_wait 50 npm run test:bdd -- --tags=@third --world-parameters '{"appDataBaseDir":"$CUCUMBER_ARTIFACTS_DIR","keepFailedArtifacts":true}';
    fi
  - if [ "$BDD_SECTION" == "fourth" ]; then
    travis_wait 50 npm run test:bdd -- --tags=@fourth --world-parameters '{"appDataBaseDir":"$CUCUMBER_ARTIFACTS_DIR","keepFailedArtifacts":true}';
    fi
  - if [ "$BDD_SECTION" == "fifth" ]; then
    travis_wait 50 npm run test:bdd -- --tags=@fifth --world-parameters '{"appDataBaseDir":"$CUCUMBER_ARTIFACTS_DIR","keepFailedArtifacts":true}';
    fi
  - if [ "$BDD_SECTION" == "sixth" ]; then
    npm test 2> $ARTIFACTS_DIR/mocha-logs.log;
    npm run ganache &> $ARTIFACTS_DIR/ganache.log;
    npm run truffle:test > $ARTIFACTS_DIR/truffle-test.log;
    npm run truffle:deploy:ganache > $ARTIFACTS_DIR/truffle-migrate.log;
    fi
  - if [ "$BDD_SECTION" == "docker" ];
    npm run ganache &> $ARTIFACTS_DIR/ganache.log;
    npm run truffle:deploy:ganache > $ARTIFACTS_DIR/truffle-migrate.log;
    ./test/docker/check_image.sh;
    ./test/docker/cleanup_image.sh;
  - fi
  - jobs
  - kill -9 %1
after_script:
  - kill -9 $(pgrep arangod)
