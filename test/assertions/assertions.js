const context = { xsd: 'http://www.w3.org/2001/XMLSchema#', testProperty: 'http://example.com' };

function createTestGraph(id, type, values) {
    return {
        '@context': context,
        '@graph': values.map((value, i) => ({
            '@id': id + i,
            testProperty: { '@type': type, '@value': value },
        })),
    };
}

// XSD:DECIMAL
let id = 'test:decimal';
let type = 'xsd:decimal';
let values = [
    100,
    '100',
    '100.0',
    -1.23,
    '-1.23',
    12678967.543233,
    '12678967.543233',
    '+100000.00',
    '1000000000000000000000000000000000000000000',
];
const decimal = createTestGraph(id, type, values);

// XSD:INTEGER
id = 'test:integer';
type = 'xsd:integer';
values = [
    100,
    '100',
    '100.0',
    -100,
    '-100',
    -1.23,
    '-1.23',
    12678967.543233,
    '12678967.543233',
    '+100000.00',
    '1000000000000000000000000000000000000000000',
    '-1000000000000000000000000000000000000000000',
];
const integer = createTestGraph(id, type, values);

// XSD:INT
id = 'test:int';
type = 'xsd:int';
values = [
    100,
    '100',
    '100.0',
    -100,
    '-100',
    -1.23,
    '-1.23',
    12678967.543233,
    '12678967.543233',
    '+100000.00',
    '1000000000000000000000000000000000000000000',
    '-1000000000000000000000000000000000000000000',
];
const int = createTestGraph(id, type, values);

// XSD:LONG
id = 'test:long';
type = 'xsd:long';
values = [
    100,
    '100',
    '100.0',
    -100,
    '-100',
    -1.23,
    '-1.23',
    12678967.543233,
    '12678967.543233',
    '+100000.00',
    '1000000000000000000000000000000000000000000',
    '-1000000000000000000000000000000000000000000',
];
const long = createTestGraph(id, type, values);

// XSD:DATETIME
id = 'test:dateTime';
type = 'xsd:dateTime';
values = [
    "2022-08-20'T'13:20:10*633+0000",
    '2022 Mar 03 05:12:41.211 PDT',
    'Jan 21 18:20:11 +0000 2022',
    '19/Apr/2022:06:36:15 -0700',
    'Dec 2, 2022 2:39:58 AM',
    'Jun 09 2022 15:28:14',
    'Apr 20 00:00:35 2010',
    'Sep 28 19:00:00 +0000',
    'Mar 16 08:12:04',
    '2022-10-14T22:11:20+0000',
    "2022-07-01T14:59:55.711'+0000'",
    '2022-07-01T14:59:55.711Z',
    '2022-08-19 12:17:55 -0400',
    '2022-08-19 12:17:55-0400',
    '2022-06-26 02:31:29,573',
    '2022/04/12*19:37:50',
    '2022 Apr 13 22:08:13.211*PDT',
    '2022 Mar 10 01:44:20.392',
    '2022-03-10 14:30:12,655+0000',
    '2022-02-27 15:35:20.311',
    '2022-03-12 13:11:34.222-0700',
    "2022-07-22'T'16:28:55.444",
    "2022-09-08'T'03:13:10",
    "2022-03-12'T'17:56:22'-0700'",
    "2022-11-22'T'10:10:15.455",
    "2022-02-11'T'18:31:44",
    '2022-10-30*02:47:33:899',
    '2022-07-04*13:23:55',
    '22-02-11 16:47:35,985 +0000',
    '22-06-26 02:31:29,573',
    '22-04-19 12:00:17',
    '06/01/22 04:11:05',
    '220423 11:42:35',
    '20220423 11:42:35.173',
    '08/10/22*13:33:56',
    '11/22/2022*05:13:11',
    '05/09/2022*08:22:14*612',
    '04/23/22 04:34:22 +0000',
    '10/03/2022 07:29:46 -0700',
    '11:42:35',
    '11:42:35.173',
    '11:42:35,173',
    '23/Apr 11:42:35,173',
    '23/Apr/2022:11:42:35',
    '23/Apr/2022 11:42:35',
    '23-Apr-2022 11:42:35',
    '23-Apr-2022 11:42:35.883',
    '23 Apr 2022 11:42:35',
    '23 Apr 2022 10:32:35*311',
    '0423_11:42:35',
    '0423_11:42:35.883',
    '8/5/2022 3:31:18 AM:234',
    '9/28/2022 2:23:15 PM',
];
const dateTime = createTestGraph(id, type, values);

export default {
    decimal,
    integer,
    int,
    long,
    dateTime,
};
